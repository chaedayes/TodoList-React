{"ast":null,"code":"var _jsxFileName = \"C:\\\\ace\\\\react-study\\\\mashup-todolist\\\\src\\\\components\\\\TodoCreate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from \"./TodoContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${props => props.open && css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n_c = CircleButton;\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n_c2 = InsertFormPositioner;\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n_c3 = InsertForm;\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n_c4 = Input;\nfunction TodoCreate() {\n  _s();\n  const [open, setOpen] = useState(false);\n  cosnt[(getValue, setValue)] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n  const onToggle = () => setOpen(!open);\n  const onChange = e => setValue(e.target.value);\n  const onSubmit = e => {\n    e.preventDefault(); // 새로 고침 방지\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [open && /*#__PURE__*/_jsxDEV(InsertFormPositioner, {\n      children: /*#__PURE__*/_jsxDEV(InsertForm, {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter\\uB97C \\uB204\\uB974\\uC138\\uC694\",\n          onChange: onChange,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n      onClick: onToggle,\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoCreate, \"TwfaR8X84oZbg5h2TSvpmIQM9E8=\", false, function () {\n  return [useTodoDispatch, useTodoNextId];\n});\n_c5 = TodoCreate;\nexport default _c6 = /*#__PURE__*/React.memo(TodoCreate);\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CircleButton\");\n$RefreshReg$(_c2, \"InsertFormPositioner\");\n$RefreshReg$(_c3, \"InsertForm\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TodoCreate\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","button","props","open","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","setOpen","cosnt","getValue","setValue","dispatch","nextId","onToggle","onChange","e","target","value","onSubmit","preventDefault","type","todo","id","current","text","done","memo"],"sources":["C:/ace/react-study/mashup-todolist/src/components/TodoCreate.js"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from \"./TodoContext\";\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: block;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    cosnt [getValue, setValue] = useState('');\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n      e.preventDefault(); // 새로 고침 방지\r\n      dispatch({\r\n        type: 'CREATE',\r\n        todo: {\r\n          id: nextId.current,\r\n          text: value,\r\n          done: false\r\n        }\r\n      });\r\n      setValue('');\r\n      setOpen(false);\r\n      nextId.current += 1;\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {open && (\r\n            <InsertFormPositioner>\r\n                <InsertForm onSubmit={onSubmit}>\r\n                    <Input \r\n                    autoFocus placeholder=\"할 일을 입력 후, Enter를 누르세요\"\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    />\r\n                </InsertForm>\r\n            </InsertFormPositioner>\r\n        )}\r\n        <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd/>\r\n        </CircleButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoCreate);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}