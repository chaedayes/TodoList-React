{"ast":null,"code":"var _jsxFileName = \"C:\\\\ace\\\\react-study\\\\mashup-todolist\\\\src\\\\components\\\\TodoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useReducer, createContext, useContext, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  id: 1,\n  text: '프로젝트 생성하기',\n  done: true\n}, {\n  id: 2,\n  text: '컴포넌트 스타일링하기',\n  done: true\n}, {\n  id: 3,\n  text: 'Context 만들기',\n  done: false\n}, {\n  id: 4,\n  text: '기능 구현하기',\n  done: false\n}];\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? {\n        ...todo,\n        don: !todo.done\n      } : todo);\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\nconst TodoStateContext = /*#__PURE__*/createContext();\nconst TodoDispatchContext = /*#__PURE__*/createContext();\nconst TodoNextIdContext = /*#__PURE__*/createContext();\nexport function TodoProvider(_ref) {\n  _s();\n  let {\n    chidlren\n  } = _ref;\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(5);\n  return /*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n      value: dispatch,\n      children: /*#__PURE__*/_jsxDEV(TodoNextIdContext.Provider, {\n        value: nextId,\n        children: chidlren\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoProvider, \"MLelIZr2z8XWFJ9lCw3UijgeTSM=\");\n_c = TodoProvider;\nexport function useTodoState() {\n  _s2();\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n_s2(useTodoState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useTodoDispatch() {\n  _s3();\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n_s3(useTodoDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useTodoNextId() {\n  _s4();\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n}\n_s4(useTodoNextId, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","useReducer","createContext","useContext","useRef","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","don","filter","Error","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","chidlren","dispatch","nextId","useTodoState","context","useTodoDispatch","useTodoNextId"],"sources":["C:/ace/react-study/mashup-todolist/src/components/TodoContext.js"],"sourcesContent":["import React, { useReducer, createContext, useContext, useRef } from \"react\";\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        text: '프로젝트 생성하기',\r\n        done: true\r\n      },\r\n      {\r\n        id: 2,\r\n        text: '컴포넌트 스타일링하기',\r\n        done: true\r\n      },\r\n      {\r\n        id: 3,\r\n        text: 'Context 만들기',\r\n        done: false\r\n      },\r\n      {\r\n        id: 4,\r\n        text: '기능 구현하기',\r\n        done: false\r\n      }\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(todo =>\r\n                todo.id === action.id ? { ...todo, don: !todo.done } : todo\r\n                );\r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({chidlren}) {\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(5);\r\n\r\n\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>\r\n                {chidlren}\r\n                </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n    const context = useContext(TodoNextIdContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}